# name: Deploy

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Log in to Docker Hub
#         run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

#       - name: Build and Push FastAPI Image
#         run: |
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest .
#           docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

#       - name: Build and Push Nginx Image
#         run: |
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx-proxy -f Dockerfile.nginx .
#           docker push ${{ secrets.DOCKER_USERNAME }}/nginx-proxy:latest

#       - name: Deploy on Server
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SERVER_HOST }}
#           username: ${{ secrets.SERVER_USER }}
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           script: |
#             docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
#             docker pull ${{ secrets.DOCKER_USERNAME }}/nginx-proxy:latest
#             docker stop fastapi_app || true
#             docker stop nginx_proxy || true
#             docker rm fastapi_app || true
#             docker rm nginx_proxy || true
#             docker run -d --name fastapi_app -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
#             docker run -d --name nginx_proxy -p 80:80 ${{ secrets.DOCKER_USERNAME }}/nginx-proxy:latest

name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin
          docker compose version  # Verify installation

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Images with Docker Compose
        run: |
          docker compose build
          docker compose push

      - name: Deploy on Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/username/fastapi-book  # Change this to the actual path on your server
            git pull origin main      # Pull latest code
            docker compose pull       # Pull latest images
            docker compose down       # Stop and remove existing containers
            docker compose up -d      # Start new containers in detached mode
